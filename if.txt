if (oldRow[i].Id != 0) {
                //console.log("convertRowOfTerms");
                var cell = new KoCell();
                var term = ko.observable<KoTerm>(new KoTerm());

                //console.log("[", i, "]", oldRow[i]);
                //console.log("[", i, "] Id", oldRow[i].Id);
                term().Id = oldRow[i].Id;
                //console.log("[", i, "] TermDate", oldRow[i].TermDate);
                term().TermDate = oldRow[i].TermDate;


                //find course
                //console.log("[", i, "] CourseId", oldRow[i].CourseId);
                term().CourseId = oldRow[i].CourseId;
                term().Course = self.ActiveCourse;

                //find group
                //console.log("[", i, "]  GroupId", oldRow[i].GroupId);
                term().GroupId = oldRow[i].GroupId;
                for (var j = 0; j < self.RawGroupData.length; j++) {
                    if (self.RawGroupData[j].Id == term().GroupId) {
                        term().Group(new KoGroup());
                        term().Group().CourseId = self.RawGroupData[j].CourseId;
                        term().Group().Name = self.RawGroupData[j].Name;
                        term().Group().OwnerId = self.RawGroupData[j].OwnerId;
                        term().Group().Owner(new KoUser());
                        if (!term().Group().OwnerId) {
                            //console.log("option one");
                            term().Group().Owner().Id = 0;
                            term().Group().Owner().Name(self.defaultUserName);
                            term().Group().Owner().LastName(self.defaultUserLastName);
                            term().Group().Owner().Username(self.defaultUserUsername);
                            term().Group().Owner().Role(self.defaultUserRole);
                            continue;
                        }
                        else {
                            //console.log("option two", term().Group().OwnerId);
                            for (var k = 0; k < self.RawUserData.length; k++) {
                                if (term().Group().OwnerId == self.RawUserData[k].Id) {
                                    term().Group().Owner().Id = self.RawUserData[k].Id;
                                    term().Group().Owner().Name = self.RawUserData[k].Name;
                                    term().Group().Owner().LastName = self.RawUserData[k].LastName;
                                    term().Group().Owner().Username = self.RawUserData[k].Username;
                                    term().Group().Owner().Role = self.RawUserData[k].Role;
                                    break;
                                }
                            }
                        }
                    }
                }

                //console.log(term().Group().Name);

                //find user
                //console.log("[", i, "]  UserId", oldRow[i].UserId)
                term().UserId = oldRow[i].UserId;
                if (oldRow[i].UserId == 0) {
                    //console.log("It's a blank, cowboy!",oldRow[i].UserId);
                    term().User(new KoUser());
                    term().User().Name(this.defaultUserName);
                }
                else {
                    //console.log("It's not-a-blank, cowboy!");
                    for (var j = 0; j < self.RawUserData.length; j++) {
                        //console.log("comparing user with userId ", oldRow[i].UserId, " with ", self.RawUserData[j]);
                        if (self.RawUserData[j].Id == term().UserId) {
                            term().User(new KoUser());
                            term().User().Username == self.RawUserData[j].Username;
                            term().User().Name = self.RawUserData[j].Name;
                            term().User().LastName = self.RawUserData[j].LastName;
                            term().User().Role = self.RawUserData[j].Role;
                        }
                    }
                }

                //console.log(term().User().Name);
                //console.log("[", i, "] ", newRow[i]);

                newRow[i].Term = term;
                newRow[i].ButtonSkipState(oldRow[i].ButtonSkipState);
                newRow[i].ButtonTakeState(oldRow[i].ButtonTakeState);
                newRow[i].CellState(oldRow[i].CellState);
                newRow[i].DemoPickerState(oldRow[i].DemoPickerState);
                newRow[i].x(i);
                newRow[i].y(order);
                newRow[i].Term().TermDate = self.dateToString(newRow[i].Term().TermDate);
                //newRow[i].Term().TermDate = parts[0];
                //console.log(newRow[i].Term().TermDate);
                //console.log("convertRowOfTerms end");
            }