else {
                //console.log("***convertRowOfTerms");
                var cell = new KoCell();
                var term = ko.observable<KoTerm>(new KoTerm());
                var memPos = 0;

                term().TermDate(termDate);
                for (var j = 0; j < oldRow.length; j++) {
                    if (oldRow[i].Id != 0) {
                        memPos = j;
                    }
                }

                term().Id = 0;

                //find course
                //term().CourseId = oldRow[memPos].CourseId; // fix - get any course from row
                term().Course = self.ActiveCourse;

                //find group
                //console.log("[", i, "]  GroupId", oldRow[i].GroupId);
                if (oldRow[i].GroupId == 0) {
                    term().GroupId = 0;
                    term().Group(new KoGroup());
                    term().Group().Name(this.defaultGroupName);
                    term().Group().Owner(new KoUser());
                    term().Group().Owner().Name(this.defaultUserName);
                    term().Group().Owner().Id = 0;
                }
                else {
                    for (var j = 0; j < self.RawGroupData.length; j++) {
                        if (oldRow[i].GroupId == self.RawGroupData[j].Id) {
                            term().GroupId = self.RawGroupData[j].Id;
                            term().Group().Name = self.RawGroupData[j].Name;
                            term().Group().OwnerId = self.RawGroupData[j].OwnerId;
                            term().Group().Owner(new KoUser());
                            for (var k = 0; k < self.RawUserData.length; k++) {
                                if (term().Group().OwnerId == self.RawUserData[k].Id) {
                                    term().Group().Owner().Name = self.RawUserData[k].Name;
                                    term().Group().Owner().Username = self.RawUserData[k].Username;
                                    term().Group().Owner().LastName = self.RawUserData[k].LastName;
                                    term().Group().Owner().Id = self.RawUserData[k].Id;
                                    term().Group().Owner().Role = self.RawUserData[k].Role;
                                    break;
                                }
                            }
                            break;
                        }
                    }

                }
                //console.log("*",term().Group().Name());


                //find user
                //console.log("[", i, "] UserId", oldRow[i].UserId);
                term().UserId = 0;
                term().User(new KoUser());
                term().User().Name(this.defaultUserName);
                //console.log("*",term().User().Name());

                //console.log("[", i, "] ", newRow[i]);

                newRow[i].Term = term;
                newRow[i].ButtonSkipState(oldRow[i].ButtonSkipState);
                newRow[i].ButtonTakeState(oldRow[i].ButtonTakeState);
                newRow[i].CellState(oldRow[i].CellState);
                newRow[i].DemoPickerState(oldRow[i].DemoPickerState);
                newRow[i].x(i);
                newRow[i].y(order);

                newRow[i].Term().TermDate = self.dateToString(newRow[i].Term().TermDate);
                //console.log(newRow[i].Term().User().Name());
                //console.log("***convertRowOfTerms end");
            }